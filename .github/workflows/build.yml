name: Build

on:
  push:
    branches:
      - "*"
  pull_request:
    branches:
      - "*"
    types: [opened, synchronize, reopened]

concurrency:
  group: ${{ github.ref }}
  cancel-in-progress: true

jobs:
  build:
    name: Build
    runs-on: windows-2022
    strategy:
      fail-fast: false
      matrix:
        configuration:
          #- Debug
          - Release
    steps:
      - name: Check out files
        uses: actions/checkout@v4.2.0
        with:
          submodules: true
          fetch-depth: 0
          # NOTE - If LFS ever starts getting used during builds, switch this to true!
          lfs: false

      - name: Add msbuild to PATH
        uses: microsoft/setup-msbuild@v2

      - name: Generate project files
        run: tools/premake5 vs2022

      - name: Set up problem matching
        uses: ammaraskar/msvc-problem-matcher@master

      - name: Build ${{matrix.configuration}}
        run: msbuild /m /v:minimal /p:Configuration=${{matrix.configuration}} /p:Platform=x64 build/h2m-mod-cb.sln

      - name: Upload ${{matrix.configuration}} binary
        if: matrix.configuration == 'Release' && github.repository_owner == 'CBServers' && github.event_name == 'push' && (github.ref == 'refs/heads/main' || github.ref == 'refs/heads/develop')
        uses: actions/upload-artifact@v4.4.0
        with:
          name: ${{matrix.configuration}} Binary
          path: |
            build/bin/x64/${{matrix.configuration}}/h2m-mod-cb.exe

  deploy:
    name: Deploy artifacts
    needs: build
    runs-on: windows-2022
    if: github.repository_owner == 'CBServers' && github.event_name == 'push' && (github.ref == 'refs/heads/main' || github.ref == 'refs/heads/develop')
    steps:
      - name: Download Release binaries
        uses: actions/download-artifact@v4.1.8
        with:
          name: Release Binary
      
      - name: Clone updater
        run: |
          git config --global user.name 'CBServers'
          git config --global user.email '${{ secrets.OWNER_EMAIL }}'
          $env:GIT_TERMINAL_PROMPT=0
          $env:GIT_USERNAME="CBServers"
          $env:GIT_PASSWORD="${{ secrets.REPO_PAT }}"
          git clone https://$env:GIT_USERNAME:$env:GIT_PASSWORD@github.com/CBServers/updater.git

      - name: Replace new artifacts with ones in the updater
        run: |
          Move-Item -Path .\h2m-mod-cb.exe -Destination .\updater\updater\h2m\ -Force

      - name: Download hashing executable and generate hashes
        run: |
          cd updater\updater\h2m
          Invoke-WebRequest -Uri "https://github.com/CBServers/updater/releases/download/v1.0.0/update-hasher.exe" -OutFile "update-hasher.exe"
          .\update-hasher.exe

      - name: Move json to correct directory and cleanup
        run: |
          cd updater\updater\h2m
          mv hashed.json h2m.json
          Move-Item -Path .\h2m.json -Destination ..\ -Force
          Remove-Item -Path .\update-hasher.exe -Force

      - name: Push changes to updater
        run: |
          cd updater
          git add .
          git commit -m "Update artifacts"
          git push origin main